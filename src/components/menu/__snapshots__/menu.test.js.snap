// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing <Menu/> Header have rendered correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Menu />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <li
          className="undefined__item"
        >
          <Link
            replace={false}
            to="/"
          >
            <img
              alt="logo"
              src="../logo/Logoundefined.svg"
            />
          </Link>
        </li>,
        <li
          className="undefined__item"
        >
          <Link
            replace={false}
            to="/ourcoffee"
          >
            Our coffee
          </Link>
        </li>,
        <li
          className="undefined__item"
        >
          <Link
            replace={false}
            to="/pleasure"
          >
            For your pleasure
          </Link>
        </li>,
        <li
          className="undefined__item"
        >
          <Link
            replace={false}
            to="/contact"
          >
            Contact us
          </Link>
        </li>,
      ],
      "className": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            replace={false}
            to="/"
          >
            <img
              alt="logo"
              src="../logo/Logoundefined.svg"
            />
          </Link>,
          "className": "undefined__item",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <img
              alt="logo"
              src="../logo/Logoundefined.svg"
            />,
            "replace": false,
            "to": "/",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "logo",
              "src": "../logo/Logoundefined.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": [Function],
        },
        "type": "li",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            replace={false}
            to="/ourcoffee"
          >
            Our coffee
          </Link>,
          "className": "undefined__item",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Our coffee",
            "replace": false,
            "to": "/ourcoffee",
          },
          "ref": null,
          "rendered": "Our coffee",
          "type": [Function],
        },
        "type": "li",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            replace={false}
            to="/pleasure"
          >
            For your pleasure
          </Link>,
          "className": "undefined__item",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "For your pleasure",
            "replace": false,
            "to": "/pleasure",
          },
          "ref": null,
          "rendered": "For your pleasure",
          "type": [Function],
        },
        "type": "li",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            replace={false}
            to="/contact"
          >
            Contact us
          </Link>,
          "className": "undefined__item",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Contact us",
            "replace": false,
            "to": "/contact",
          },
          "ref": null,
          "rendered": "Contact us",
          "type": [Function],
        },
        "type": "li",
      },
    ],
    "type": "ul",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <li
            className="undefined__item"
          >
            <Link
              replace={false}
              to="/"
            >
              <img
                alt="logo"
                src="../logo/Logoundefined.svg"
              />
            </Link>
          </li>,
          <li
            className="undefined__item"
          >
            <Link
              replace={false}
              to="/ourcoffee"
            >
              Our coffee
            </Link>
          </li>,
          <li
            className="undefined__item"
          >
            <Link
              replace={false}
              to="/pleasure"
            >
              For your pleasure
            </Link>
          </li>,
          <li
            className="undefined__item"
          >
            <Link
              replace={false}
              to="/contact"
            >
              Contact us
            </Link>
          </li>,
        ],
        "className": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              replace={false}
              to="/"
            >
              <img
                alt="logo"
                src="../logo/Logoundefined.svg"
              />
            </Link>,
            "className": "undefined__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <img
                alt="logo"
                src="../logo/Logoundefined.svg"
              />,
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "logo",
                "src": "../logo/Logoundefined.svg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": [Function],
          },
          "type": "li",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              replace={false}
              to="/ourcoffee"
            >
              Our coffee
            </Link>,
            "className": "undefined__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Our coffee",
              "replace": false,
              "to": "/ourcoffee",
            },
            "ref": null,
            "rendered": "Our coffee",
            "type": [Function],
          },
          "type": "li",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              replace={false}
              to="/pleasure"
            >
              For your pleasure
            </Link>,
            "className": "undefined__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "For your pleasure",
              "replace": false,
              "to": "/pleasure",
            },
            "ref": null,
            "rendered": "For your pleasure",
            "type": [Function],
          },
          "type": "li",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              replace={false}
              to="/contact"
            >
              Contact us
            </Link>,
            "className": "undefined__item",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Contact us",
              "replace": false,
              "to": "/contact",
            },
            "ref": null,
            "rendered": "Contact us",
            "type": [Function],
          },
          "type": "li",
        },
      ],
      "type": "ul",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
